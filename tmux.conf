################################################################################
# Options
################################################################################
set-option -g default-shell $SHELL

# Make window/pane index start with 1
set -g base-index 1
set -g pane-base-index 1

# Automatically renumber tmux windows
set -g renumber-windows on

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# True Color and italics
#   https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
#
# tmux-256color on macOS
#   https://gpanders.com/blog/the-definitive-guide-to-using-tmux-256color-on-macos/
#   https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
#   https://gist.github.com/nicm/ea9cf3c93f22e0246ec858122d9abea1
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",*256col*:RGB"

################################################################################
# Key Bindings
################################################################################
# Mouse support
set-option -g mouse on

# Set vi mode for copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

bind-key 'c' new-window -c "#{pane_current_path}"
bind-key 'v' split-window -h -c "#{pane_current_path}"
bind-key 's' split-window -v -c "#{pane_current_path}"
bind-key 'C-c' new-window -c "#{pane_current_path}"
bind-key 'C-v' split-window -h -c "#{pane_current_path}"
bind-key 'C-s' split-window -v -c "#{pane_current_path}"

bind-key 'h' select-pane -L
bind-key 'j' select-pane -D
bind-key 'k' select-pane -U
bind-key 'l' select-pane -R
bind-key 'C-h' select-pane -L
bind-key 'C-j' select-pane -D
bind-key 'C-k' select-pane -U
bind-key 'C-l' select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# {
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Restoring Clear Screen (C-l)
bind C-l send-keys 'C-l'
# }

################################################################################
# Plugins
################################################################################

set -g @plugin 'catppuccin/tmux#v2.1.0'

set -g @plugin 'tmux-plugins/tmux-sensible'

#
# tmux-yank
#
# OS X requirements
#
# reattach-to-user-namespace
#
# Install with brew $ brew install reattach-to-user-namespace or macports $ sudo port install tmux-pasteboard.
#
# Note: Beginning with OSX Yosemite (10.10), pbcopy is reported to work correctly with tmux, so we believe reattach-to-user-namespace is not needed anymore. Please install it in case the plugin doesn't work for you.
#
#
# Linux requirements
#
# xclip OR xsel command
#
# You most likely already have one of them, but if not:
# Debian / Ubuntu: $ sudo apt-get install xclip or $ sudo apt-get install xsel
# Red hat / CentOS: $ yum install xclip or $ yum install xsel
#
#
# Cygwin requirements
#
# putclip command
#
# Get the command by installing cygutils-extra package with Cygwin's setup*.exe.
#
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection_mouse 'clipboard'

set -g @plugin 'tmux-plugins/tpm'
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'

if-shell "test -f ~/.tmux.local.conf" "source-file ~/.tmux.local.conf"
